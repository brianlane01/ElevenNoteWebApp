@page "/Note/{NoteId:int}"
@using ElvenNoteWepApp.Shared.Models.Note
@attribute [Authorize]
@inject HttpClient http

@code{
    [Parameter]
    public int NoteId {get; set;}

    public NoteDetail? Note {get; set;}

    protected override async Task OnInitializedAsync()
    {
        Note = await http.GetFromJsonAsync<NoteDetail>($"/api/Note/{NoteId}");
    }
}

<h3>Note ID#: @NoteId</h3>

@if (Note != null)
{
    <div class="container">
        <div class="card">
            <div class="card-header d-flex justify-content-between">
                <span>Note ID#: @Note.Id</span>
                <span class ="text-muted"><strong> Category for Note: @Note.CategoryName</strong></span>
            </div>
            <div class="card-body">
                <h4 class="card-title">@Note.Title</h4>
                <p class ="card-text">@Note.Content</p>
            </div>
            <div class ="card-footer text-muted d-flex justify-content-between">
                <span class = "text-left">Created: @Note.CreatedUtc</span>
                @if(Note.ModifiedUtc != null)
                {
                    <span class="text-right">Modified: @Note.ModifiedUtc</span>
                }
            </div>
        </div>
        <div class="d-flex justify-content-center mt-3">
            <div class="text-center justify-content-between w-25">
                <a href=@($"Note/Edit/{Note.Id}") class="btn btn-outline-primary">Edit</a>
                <a href=@($"Note/Delete/{Note.Id}") class="btn btn-outline-danger">Delete</a>
                <hr />
                <a href ="/Note">Back to Notes Index</a>
            </div>
        </div>
    </div>
}
else
{
    <p><em>Loading . . . . </em></p>
}